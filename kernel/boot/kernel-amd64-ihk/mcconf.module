# -*- mode:toml; -*-
[module.kernel-amd64-ihk]
    incfiles = [ "boot/mlog.hh", "boot/boot.ld", "boot/memory-layout.h", "boot/DeployKernelSpace.hh", "boot/memory-layout-common.h", "boot/init-kernelspace-common.hh", "boot/pagetables.hh", "boot/bootparam.h", "boot/kmem.hh", "boot/ihk-entry.hh", "boot/IhkSink.hh" ]
    kernelfiles = [ "boot/mlog.cc", "boot/ihk-entry.cc", "boot/init-kernelspace-common.cc", "boot/kernel.cc", "boot/kmem.cc", "boot/start.S" ]
    requires = [ "tag/platform/pc", "tag/boot/ihk"]
    provides = [ "boot64.elf", "symbol/sleeping_failed", "symbol/irq_entry_kernel" ] #kernel-main: sleeping, irq_entry_kernel

    makefile_head = '''
# just for make clean
EXTRATARGETS += boot/boot.o

TARGETS += boot64.elf
EXTRATARGETS += kernel2.cc kernel2.o
DEP += kernel2.d
'''

    makefile_body = '''
# apply preprocessor on linker script
boot/boot.o: boot/boot.ld
	$(CPP) $(KERNEL_CPPFLAGS) $(DEPFLAGS) -E -P -xc boot/boot.ld -o boot/boot.o

kernel2_other = $(filter-out %.cc, $(KERNELFILES))
kernel2_obj = $(addsuffix .o, $(basename $(kernel2_other)))

kernel2.cc:
	echo "" > kernel2.cc
	for F in $(filter %.cc, $(KERNELFILES)) ; do echo "#include \"$$F\"" >> kernel2.cc ; done


kernel2.o: kernel2.cc
	$(KERNEL_CXX) $(KERNEL_CXXFLAGS) $(KERNEL_CPPFLAGS) $(DEPFLAGS) -c -o $@ $<
	$(KERNEL_CXX) $(KERNEL_CXXFLAGS) $(KERNEL_CPPFLAGS) $(DEPFLAGS) -S -o $@.s $<

boot64.elf: boot/boot.o $(kernel2_obj) kernel2.o
	$(KERNEL_LD) $(KERNEL_LFLAGS) -o boot64.elf -dT boot/boot.o kernel2.o $(kernel2_obj)
	nm boot64.elf | cut -d " " -f 1,3 | c++filt -t > boot.sym
	nm -S --size-sort -C boot64.elf > boot.size
	objdump -dS boot64.elf | c++filt > boot.disasm
	strip boot64.elf

boot64ex.elf: boot/boot.o $(KERNELFILES)
	$(KERNEL_CXX) -static $(addprefix -Xlinker , $(KERNEL_LFLAGS)) -nostartfiles -nodefaultlibs -o boot64ex.elf -Wl,-verbose -Xlinker -dT -Xlinker boot/boot.o -T boot/boot.o $(KERNEL_CXXFLAGS) $(KERNEL_CPPFLAGS) $(DEPFLAGS) $(KERNELFILES)
	nm boot64ex.elf | cut -d " " -f 1,3 | c++filt -t > bootex.sym
	nm -S --size-sort -C boot64ex.elf > bootex.size
	objdump -dS boot64ex.elf | c++filt > bootex.disasm
	strip boot64ex.elf

boot64s.elf: boot/boot.o $(KERNELFILES_OBJ)
	$(KERNEL_LD) $(KERNEL_LFLAGS) -o boot64s.elf -dT boot/boot.o $(KERNELFILES_OBJ)
	nm  boot64s.elf | cut -d " " -f 1,3 | c++filt -t > boots.sym
	objdump -dS boot64s.elf | c++filt > boots.disasm
	strip boot64s.elf

stop:
	../3rdparty/ihkstop+release.sh 

boot: all
	sudo rm -rf /tmp/ihkmond
	sudo ../3rdparty/ihkreboot.sh -k 1 -p $(shell pwd)/boot64.elf

wait:
	sleep 5

run: boot wait stop
	cat /tmp/ihkmond/mcos0/kmsg0

'''


/* -*- mode:C++; -*- */
#pragma once

#include <bits/stl_algobase.h>

// namespace std {

//   template<class InputIterator, class UnaryPredicate>
//   bool any_of (InputIterator first, InputIterator last, UnaryPredicate pred) {
//     while (first!=last) {
//       if (pred(*first)) return true;
//       ++first;
//     }
//     return false;
//   }

//   template<class T>
//   inline const T& max (const T& a, const T& b) { return (a<b)?b:a; }

//   template<class T>
//   inline const T& min (const T& a, const T& b) { return (a>b)?b:a; }

// } // namespace std
